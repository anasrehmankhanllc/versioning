name: update version
on:
  workflow_dispatch:
  push:
    tags:
      - '**'

jobs:
  get-latest-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full tag history is available

      - name: Fetch the Latest Tag
        id: fetch_tag
        run: |
          # Fetch the latest tag
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag: $LATEST_TAG"
          echo "::set-output name=tag::$LATEST_TAG"
        shell: bash

      - name: Extract Version from Tag
        id: extract_version
        run: |
          # Extract the version after the last '/'
          VERSION=$(echo "${{ steps.fetch_tag.outputs.tag }}" | awk -F'/' '{print $NF}')
          echo "Extracted version: $VERSION"
          echo "::set-output name=version::$VERSION"
        shell: bash

      - name: Check Current Version in package.json
        id: check_version
        run: |
          # Read the current version from package.json
          CURRENT_VERSION=$(jq -r '.version' package.json)
          echo "Current version in package.json: $CURRENT_VERSION"

          # Compare versions
          if [ "$CURRENT_VERSION" == "${{ steps.extract_version.outputs.version }}" ]; then
            echo "Release $CURRENT_VERSION is already deployed."
            echo "already_deployed=true" >> $GITHUB_ENV
          else
            echo "Updating to version ${{ steps.extract_version.outputs.version }}"
            echo "already_deployed=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Update package.json version
        if: env.already_deployed != 'true'
        run: |
          npm version "${{ steps.extract_version.outputs.version }}" --no-git-tag-version
          echo "Updated package.json to version ${{ steps.extract_version.outputs.version }}"
        shell: bash

      - name: Show the content of package.json
        run: cat package.json

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: anasrehmankhanllc
          author_email: anasrehmankhanllc@gmail.com
          message: 'Bumping npm version'
          push: origin HEAD:main

  do-deployment:
    runs-on: ubuntu-latest
    needs: get-latest-tag
    steps:
      - name: Deploy the app
        run: echo 'App is deployed with the latest version'
